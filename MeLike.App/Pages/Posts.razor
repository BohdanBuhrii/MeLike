@page "/posts"

@using MeLike.Services.ViewModels
@using MeLike.Services.Interfaces
@using MeLike.App.Shared.Components

@inject IPostsService PostService

@if (posts != null)
{
    @foreach (var post in posts)
    {
        <Post Source=@post></Post>
    }
}

@if (loading)
{
    <div class="align-middle text-center">
        <div class="spinner-border">
        </div>
    </div>
}

@if (posts == null && !loading)
{
    <h3>Error while loading ...</h3>
}

<div class="text-center">
    <button class="btn btn-link" @onclick=@UploadMorePosts>
        Read more posts
    </button>
</div>
@code {
    private IEnumerable<PostViewModel> posts;
    private PageViewModel page = new PageViewModel();
    private bool loading;

    protected override async Task OnInitializedAsync()
    {
        posts = await Load(PostService.GetPostsByUserFriends(page));
    }

    private async Task UploadMorePosts()
    {
        page.Number += 1;
        posts = posts.Concat(await Load(PostService.GetPostsByUserFriends(page)));
    }

    private async Task<T> Load<T>(Task<T> resourse)
    {
        try
        {
            loading = true;
            return await resourse;
        }
        finally
        {
            loading = false;
        }
    }
}
